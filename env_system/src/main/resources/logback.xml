<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds" debug="false">
    <contextName>env_test</contextName>
    <property name="LOG_HOME" value="logs/"/>
    <property name="log.charset" value="utf-8"/>
    <property name="log.pattern"
              value="%black(%contextName-) %red(%d{yyyy-MM-dd HH:mm:ss}) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger{36}) - %gray(%msg%n)"/>

    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${log.pattern}</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/server.log.%d{yyyy-MM-dd-HH}</FileNamePattern>
            <MaxHistory>60</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>[%level] %d{yyyy-MM-dd HH:mm:ss.SSS} %X{logId} %c.java - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!--    <appender name="mysql" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--        <file>${LOG_HOME}/mysql.log</file>-->
    <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--            <FileNamePattern>${LOG_HOME}/mysql.log.%d{yyyy-MM-dd-HH}</FileNamePattern>-->
    <!--            <MaxHistory>60</MaxHistory>-->
    <!--        </rollingPolicy>-->
    <!--        <encoder>-->
    <!--            <pattern>[%level] %d{yyyy-MM-dd HH:mm:ss.SSS} %X{logId} %c.java - %msg%n</pattern>-->
    <!--            <charset>utf-8</charset>-->
    <!--        </encoder>-->
    <!--    </appender>-->

    <!--    <appender name="redis" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--        <file>${LOG_HOME}/redis.log</file>-->
    <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--            <FileNamePattern>${LOG_HOME}/redis.log.%d{yyyy-MM-dd-HH}</FileNamePattern>-->
    <!--            <MaxHistory>60</MaxHistory>-->
    <!--        </rollingPolicy>-->
    <!--        <encoder>-->
    <!--            <pattern>[%level] %d{yyyy-MM-dd HH:mm:ss.SSS} %X{logId} %c.java - %msg%n</pattern>-->
    <!--            <charset>utf-8</charset>-->
    <!--        </encoder>-->
    <!--    </appender>-->

    <!--普通日志输出到控制台-->
    <root level="info">
        <!-- root将级别为“INFO”及大于“INFO”的日志信息交给已经配置好的名为“Console”的appender处理，“Console”appender将信息打印到Console； -->
        <appender-ref ref="console"/>
        <!-- 标识这个appender将会添加到这个logger -->
        <appender-ref ref="FILE"/>
    </root>

    <!--  JavaMelody应用监控日志  -->
    <!-- http requests log -->
    <logger name="javamelody">
        <level value="info"/>
    </logger>
    <!-- debugging log -->
    <logger name="net.bull.javamelody">
        <level value="debug"/>
    </logger>

    <!--    监控sql日志输出-->
    <!--  如想看到表格数据，将OFF改为INFO  -->
    <logger name="jdbc.resultsettable" level="INFO" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!--    包含 SQL 语句实际的执行时间 及sql语句（与jdbc.sqlonly功能重复）   -->
    <logger name="jdbc.sqltiming" level="INFO" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!--      仅仅记录 SQL 语句，会将占位符替换为实际的参数-->
    <logger name="jdbc.sqlonly" level="OFF" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!--  包含 ResultSet 的信息，输出篇幅较长  -->
    <logger name="jdbc.resultset" level="ERROR" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!-- 输出了 Connection 的 open、close 等信息  -->
    <logger name="jdbc.connection" level="OFF" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <!--    除了 ResultSet 之外的所有JDBC调用信息，篇幅较长 -->
    <logger name="jdbc.audit" level="OFF" additivity="false">
        <appender-ref ref="console"/>
    </logger>

</configuration>